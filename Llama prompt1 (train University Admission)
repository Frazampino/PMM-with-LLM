prompt = f"""Compare the following two BPMN models in XML format and assess their similarity:

BPMN Model 1: {bpmn_file_1}
BPMN Model 2: {bpmn_file_2}

Instructions:
1. Provide a similarity matching score from 0 to 1, where 0 means no similarity and 1 means perfect similarity. Also include a brief explanation for the score.
2. Identify one-to-one mappings between tasks in both models based on their semantic meaning and structure. Provide the mappings in a detailed list format, specifying each task in Model 1 and its corresponding task in Model 2, with a short explanation of why they are considered similar.
3. Identify complex task mappings:
   - **1:N mappings**: where a single task in one model corresponds to multiple tasks in the other model. 
     - If found, list them clearly with explanations.
     - If none exist, explicitly state: "No 1:N mappings found."
4. Identify significant differences in gateways or other elements. Include the type of gateway, the conditions associated with each one, and compare flow labels. Also, describe any additional elements or processes present in one model but absent in the other.

Respond in a clear, structured, and detailed format."""

    # 2. Invio del prompt a Ollama e ricezione della risposta
    response = ollama.chat(model='llama3', messages=[
        {
            'role': 'user',
            'content': prompt,
        },
    ])

    # 3. Estrazione del contenuto della risposta
    response_content = response['message']['content']
    
    # 4. Stampa della risposta
    print(f"Response:\n{response_content}")

# Esegui il confronto con due file di esempio
bpmn_file_1 = 'Frankfurt.bpmn'
bpmn_file_2 = 'Cologne.bpmn'

compare_bpmn_files(bpmn_file_1, bpmn_file_2)
